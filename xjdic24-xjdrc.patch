--- src.orig/xjdcomm.c	2008-11-27 22:31:38.000000000 +0200
+++ src/xjdcomm.c	2008-12-01 16:34:17.000000000 +0200
@@ -187,235 +187,210 @@
 	extern int KImode;
 #endif
 
-	strcpy(DicDir,ENVname); /* added by nakahara@debian.org */
-	while(TRUE)
-	{
-		if (strlen(cl_rcfile) > 0)
-		{
-			fm = fopen(cl_rcfile,"r");
-			if (fm != NULL) break;
+	strcpy(DicDir,DEFAULT_DICDIR);
+	while(TRUE) {
+		if (strlen(cl_rcfile) > 0) {
+			if((fm = fopen(cl_rcfile, "r")) != NULL)
+				break;
 			else
-			{
-				printf("Control file: %s cannot be accessed!\n",cl_rcfile);
-			}
+				fprintf(stderr, "Control file %s cannot be accessed!\n", cl_rcfile);
 		}
-		xjdicdir[0] = '\0';
-		if (strlen(ENVname) > 2)
-		{
-			strcpy(xjdicdir,ENVname);
-			strcat(xjdicdir,"/");
-		}
-		else    
-		{
-			strcpy(xjdicdir,getenv("HOME"));
-			strcat(xjdicdir,"/");
-		}
-		strcat(xjdicdir,".xjdicrc");
-		fm = fopen(xjdicdir,"r");
-		if (fm != NULL) break;
-		strcpy(xjdicdir,".xjdicrc");
-		fm = fopen(xjdicdir,"r");
-		if (fm != NULL) break;
-		if (getenv("HOME") != NULL)
-		{
-			strcpy(xjdicdir,getenv("HOME"));
-			strcat(xjdicdir,"/");
-			strcat(xjdicdir,".xjdicrc");
-			fm = fopen(xjdicdir,"r");
-			if (fm != NULL) break;
+		if (getenv("HOME") != NULL) {
+			strcpy(xjdicdir, getenv("HOME"));
+			strcat(xjdicdir, "/.xjdicrc");
+			if((fm = fopen(xjdicdir, "r")) != NULL)
+				break;
 		}
-		printf("No control file detected!\n");
+		
+		strcpy(xjdicdir, ENVname);
+		strcat(xjdicdir, "/xjdicrc");
+		if((fm = fopen(xjdicdir, "r")) != NULL)
+			break;
+
+		fprintf(stderr, "No control file detected!\n");
 		return;
 	}
-	if (fm != NULL)
+	while(fgets(rcstr,79,fm) != NULL)
 	{
-		while(fgets(rcstr,79,fm) != NULL)
-		{
-			rcwd = (unsigned char *)strtok(rcstr," \t");
+		rcwd = (unsigned char *)strtok(rcstr," \t");
 /*  dicdir works for all modes   */
-			if( stringcomp((unsigned char *)"dicdir",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(DicDir,rcwd);
-				continue;
-			}
+		if( stringcomp((unsigned char *)"dicdir",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(DicDir,rcwd);
+			continue;
+		}
 #ifdef XJDCLSERV
-			if( stringcomp((unsigned char *)"port",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				portno = atoi(rcwd);
-				continue;
-			}
-			if( stringcomp((unsigned char *)"server",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(host,rcwd);
-				continue;
-			}
+		if( stringcomp((unsigned char *)"port",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			portno = atoi(rcwd);
+			continue;
+		}
+		if( stringcomp((unsigned char *)"server",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(host,rcwd);
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-			if( stringcomp((unsigned char *)"omode",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				rcwd[0] = rcwd[0] | 0x20;
-				if(rcwd[0] == 'j') Omode = 0;
-				if(rcwd[0] == 'e') Omode = 1;
-				if(rcwd[0] == 's') Omode = 2;
-				continue;
-			}
-			if( stringcomp((unsigned char *)"kanamode",rcwd) == 0)
-			{
-				KImode = 0;
-				continue;
-			}
-			if( stringcomp((unsigned char *)"exactmatch",rcwd) == 0)
-			{
-				EMtoggle ();
-				continue;
-			}
+		if( stringcomp((unsigned char *)"omode",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			rcwd[0] = rcwd[0] | 0x20;
+			if(rcwd[0] == 'j') Omode = 0;
+			if(rcwd[0] == 'e') Omode = 1;
+			if(rcwd[0] == 's') Omode = 2;
+			continue;
+		}
+		if( stringcomp((unsigned char *)"kanamode",rcwd) == 0)
+		{
+			KImode = 0;
+			continue;
+		}
+		if( stringcomp((unsigned char *)"exactmatch",rcwd) == 0)
+		{
+			EMtoggle ();
+			continue;
+		}
 #endif
 #ifdef XJDDIC
-			if( stringcomp((unsigned char *)"dicfile",rcwd) == 0)
+		if( stringcomp((unsigned char *)"dicfile",rcwd) == 0)
+		{
+			if (thisdic == 0)
 			{
-				if (thisdic == 0)
-				{
-					thisdic = 1;
-				}
-				else
-				{
-					thisdic++;
-					NoDics++;
-				}
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(Dnamet[thisdic],rcwd);
-				strcpy(XJDXnamet[thisdic],rcwd);
-				strcat(XJDXnamet[thisdic],".xjdx");
-				continue;
+				thisdic = 1;
 			}
+			else
+			{
+				thisdic++;
+				NoDics++;
+			}
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(Dnamet[thisdic],rcwd);
+			strcpy(XJDXnamet[thisdic],rcwd);
+			strcat(XJDXnamet[thisdic],".xjdx");
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-                        if( stringcomp((unsigned char *)"gnufile",rcwd) == 0)
-                        {
-                                rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-                                strcpy(GPL_File,rcwd);
-                                continue;
-                        }
+		if( stringcomp((unsigned char *)"gnufile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(GPL_File,rcwd);
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-                        if( stringcomp((unsigned char *)"clipfile",rcwd) == 0)
-                        {
-                                rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-                                strcpy(Clip_File,rcwd);
-                                continue;
-                        }
+		if( stringcomp((unsigned char *)"clipfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(Clip_File,rcwd);
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-                        if( stringcomp((unsigned char *)"extfile",rcwd) == 0)
-                        {
-                                rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-                                strcpy(EXTname,rcwd);
-                                strcpy(EXTJDXname,rcwd);
-                                strcat(EXTJDXname, ".xjdx");
-                                continue;
-                        }
+		if( stringcomp((unsigned char *)"extfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(EXTname,rcwd);
+			strcpy(EXTJDXname,rcwd);
+			strcat(EXTJDXname, ".xjdx");
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-			if( stringcomp((unsigned char *)"rvdisplay",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				if( stringcomp((unsigned char *)"on",rcwd) == 0) RVACTIVE = TRUE;
-				if( stringcomp((unsigned char *)"off",rcwd) == 0) RVACTIVE = FALSE;
-				continue;
-			}
+		if( stringcomp((unsigned char *)"rvdisplay",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			if( stringcomp((unsigned char *)"on",rcwd) == 0) RVACTIVE = TRUE;
+			if( stringcomp((unsigned char *)"off",rcwd) == 0) RVACTIVE = FALSE;
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-			if( stringcomp((unsigned char *)"kdnoshow",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(KDNSlist,rcwd);
-				continue;
-			}
+		if( stringcomp((unsigned char *)"kdnoshow",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(KDNSlist,rcwd);
+			continue;
+		}
 #endif
 #ifdef XJDDIC
-			if( stringcomp((unsigned char *)"kdicfile",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(Dnamet[0],rcwd);
-				strcpy(XJDXnamet[0],rcwd);
-				strcat(XJDXnamet[0],".xjdx");
-				continue;
-			}
+		if( stringcomp((unsigned char *)"kdicfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(Dnamet[0],rcwd);
+			strcpy(XJDXnamet[0],rcwd);
+			strcat(XJDXnamet[0],".xjdx");
+			continue;
+		}
 #endif
 #ifdef XJDFRONTEND
-			if( stringcomp((unsigned char *)"radkfile",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(RKname,rcwd);
-				continue;
-			}
-			if( stringcomp((unsigned char *)"radfile",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(Rname,rcwd);
-				continue;
-			}
-			if( stringcomp((unsigned char *)"verbfile",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(Vname,rcwd);
-				continue;
-			}
-			if( stringcomp((unsigned char *)"romfile",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				strcpy(ROMname,rcwd);
-				continue;
-			}
-			if( stringcomp((unsigned char *)"jverb",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				if(stringcomp(rcwd,(unsigned char *)"on") == 0) Jverb = TRUE;
-				if(stringcomp(rcwd,(unsigned char *)"off") == 0) Jverb = FALSE;
-				continue;
-			}
-			if( stringcomp((unsigned char *)"filt",rcwd) == 0)
-			{
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				sscanf(rcwd,"%d",&fn);
-				if ((fn < 0)||(fn > NOFILT)) continue;
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				sscanf(rcwd,"%d",&ft);
-				if (ft > 2) continue;
-				filttype[fn] = ft;
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				filton[fn] = FALSE;
-				if(stringcomp((unsigned char *)"on",rcwd) == 0) 
-				{
-					filton[fn] = TRUE;
-					nofilts  = TRUE;
-				}
-				rcwd = (unsigned char *)strtok(NULL,"\"");
-				strcpy(filtnames[fn],rcwd);
-				ft=0;
-				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				while(rcwd != NULL)
-				{
-					strcpy(filtcodes[fn][ft],rcwd);
-					ft++;
-					rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
-				}
-				if(ft==0)continue;
-				filtcoden[fn] = ft;
-				filtact[fn] = TRUE;
-				continue;
-			}
-#endif
+		if( stringcomp((unsigned char *)"radkfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(RKname,rcwd);
+			continue;
 		}
-	}
-	else
-	{
-		printf("No .xjdicrc file detected\n");
-		return;
+		if( stringcomp((unsigned char *)"radfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(Rname,rcwd);
+			continue;
+		}
+		if( stringcomp((unsigned char *)"verbfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(Vname,rcwd);
+			continue;
+		}
+		if( stringcomp((unsigned char *)"romfile",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			strcpy(ROMname,rcwd);
+			continue;
+		}
+		if( stringcomp((unsigned char *)"jverb",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			if(stringcomp(rcwd,(unsigned char *)"on") == 0) Jverb = TRUE;
+			if(stringcomp(rcwd,(unsigned char *)"off") == 0) Jverb = FALSE;
+			continue;
+		}
+		if( stringcomp((unsigned char *)"filt",rcwd) == 0)
+		{
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			sscanf(rcwd,"%d",&fn);
+			if ((fn < 0)||(fn > NOFILT)) continue;
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			sscanf(rcwd,"%d",&ft);
+			if (ft > 2) continue;
+			filttype[fn] = ft;
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			filton[fn] = FALSE;
+			if(stringcomp((unsigned char *)"on",rcwd) == 0) 
+			{
+				filton[fn] = TRUE;
+				nofilts  = TRUE;
+			}
+			rcwd = (unsigned char *)strtok(NULL,"\"");
+			strcpy(filtnames[fn],rcwd);
+			ft=0;
+			rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			while(rcwd != NULL)
+			{
+				strcpy(filtcodes[fn][ft],rcwd);
+				ft++;
+				rcwd = (unsigned char *)strtok(NULL," \t\f\r\n");
+			}
+			if(ft==0)continue;
+			filtcoden[fn] = ft;
+			filtact[fn] = TRUE;
+			continue;
+		}
+#endif
 	}
 	fclose(fm);
 }
